name: CMake

on:
  push:
    branches:
      - 'main'
      - 'dev'
      - 'GithubActions'
  pull_request:
    types: [opened, synchronize]
    branches:
      - 'main'
      - 'dev'


jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - {runs_on: macos-12, name: "macOS Clang Debug", CC: clang, CXX: clang++, CFLAGS: "", CMAKE_BUILD_TYPE: "Debug"}
          - {runs_on: macos-12, name: "macOS Clang Release", CC: clang, CXX: clang++, CFLAGS: "", CMAKE_BUILD_TYPE: "Release"}
    runs-on: ${{ matrix.toolchain.runs_on }}
    env:
      # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
      CMAKE_BUILD_TYPE: ${{ matrix.toolchain.CMAKE_BUILD_TYPE }}
      CMAKE_C_COMPILER: ${{ matrix.toolchain.CC }}
      CMAKE_C_FLAGS: ${{ matrix.toolchain.CFLAGS }}
      CMAKE_CXX_COMPILER: ${{ matrix.toolchain.CXX }}
      CMAKE_CXX_FLAGS: ${{ matrix.toolchain.CFLAGS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log versions
        run: |
          cmake --version
          ${CMAKE_CXX_COMPILER} -v --version
        shell: bash

      - name: Install Dependencies
        run: |
          brew update && brew upgrade && brew install gmp googletest
        shell: bash

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_C_COMPILER="${CMAKE_C_COMPILER}" -DCMAKE_CXX_COMPILER="${CMAKE_CXX_COMPILER}" -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS}" -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}"

      - name: Build
        # Build your program with the given configuration
        run: cd ${{github.workspace}}/build && make -j 2 all

      - name: Build Tests
        # Build your program with the given configuration
        run: cd ${{github.workspace}}/build && make -j 2 tests

      - name: Test
        # working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.  
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: bash unitTest.sh
        shell: bash

